{"ast":null,"code":"var _jsxFileName = \"/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx\";\nimport React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport Header from './header/header';\n\nconst App = () => {\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, ({\n    store,\n    actions\n  }) => {\n    const counters = store.counters,\n          sort = store.sort;\n    const total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n    const items = counters;\n    let sorted = items;\n\n    if (sort.column !== '') {\n      let desc = [...items];\n      let asc = items.sort((a, b) => {\n        if (a[sort.column] > b[sort.column]) {\n          return 1;\n        }\n\n        if (a[sort.column] < b[sort.column]) {\n          return -1;\n        }\n\n        return 0;\n      });\n      sorted = sort.order === 'asc' ? asc : desc;\n      console.log(sorted);\n    } else {\n      sorted = items;\n      console.log(sorted);\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      total: total,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(CounterHolder, {\n      items: sorted,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default injectContext(App);","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx"],"names":["React","injectContext","Consumer","CounterHolder","Header","App","store","actions","counters","sort","total","map","c","count","reduce","acc","val","items","sorted","column","desc","asc","a","b","order","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,IAAwBC,QAAxB,QAAwC,qBAAxC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,SACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAwB;AAAA,UAChBC,QADgB,GACGF,KADH,CAChBE,QADgB;AAAA,UACNC,IADM,GACGH,KADH,CACNG,IADM;AAExB,UAAMC,KAAK,GAAGF,QAAQ,CAACG,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAApB,EAA2BC,MAA3B,CAAkC,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAtD,CAAd;AACA,UAAMC,KAAK,GAAGT,QAAd;AACA,QAAIU,MAAM,GAAGD,KAAb;;AAEA,QAAIR,IAAI,CAACU,MAAL,KAAgB,EAApB,EAAwB;AACvB,UAAIC,IAAI,GAAG,CAAE,GAAGH,KAAL,CAAX;AACA,UAAII,GAAG,GAAGJ,KAAK,CAACR,IAAN,CAAW,CAACa,CAAD,EAAIC,CAAJ,KAAU;AAC9B,YAAID,CAAC,CAACb,IAAI,CAACU,MAAN,CAAD,GAAiBI,CAAC,CAACd,IAAI,CAACU,MAAN,CAAtB,EAAqC;AACpC,iBAAO,CAAP;AACA;;AACD,YAAIG,CAAC,CAACb,IAAI,CAACU,MAAN,CAAD,GAAiBI,CAAC,CAACd,IAAI,CAACU,MAAN,CAAtB,EAAqC;AACpC,iBAAO,CAAC,CAAR;AACA;;AACD,eAAO,CAAP;AACA,OARS,CAAV;AASAD,MAAAA,MAAM,GAAGT,IAAI,CAACe,KAAL,KAAe,KAAf,GAAuBH,GAAvB,GAA6BD,IAAtC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,KAbD,MAaO;AACNA,MAAAA,MAAM,GAAGD,KAAT;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA;;AAED,WACA,0CACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAER,KAAf;AAAsB,MAAA,OAAO,EAAEH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEW,MAAtB;AAA8B,MAAA,OAAO,EAAEX,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA;AAKA,GA9BF,CADD;AAkCA,CAnCD;;AAqCA,eAAeN,aAAa,CAACI,GAAD,CAA5B","sourcesContent":["import React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport Header from './header/header';\n\nconst App = () => {\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tconst { counters, sort } = store;\n\t\t\t\tconst total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n\t\t\t\tconst items = counters;\n\t\t\t\tlet sorted = items;\n\t\t\t\t\t\n\t\t\t\tif (sort.column !== '') {\n\t\t\t\t\tlet desc = [ ...items ];\n\t\t\t\t\tlet asc = items.sort((a, b) => {\n\t\t\t\t\t\tif (a[sort.column] > b[sort.column]) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a[sort.column] < b[sort.column]) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\t\n\t\t\t\t\tsorted = sort.order === 'asc' ? asc : desc;\n\t\t\t\t\tconsole.log(sorted);\n\t\t\t\t} else {\n\t\t\t\t\tsorted = items;\n\t\t\t\t\tconsole.log(sorted);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t<Header total={total} actions={actions} />\n\t\t\t\t<CounterHolder items={sorted} actions={actions} />\n\t\t\t\t</>)\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n"]},"metadata":{},"sourceType":"module"}