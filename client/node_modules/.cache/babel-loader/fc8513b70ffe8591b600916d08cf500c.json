{"ast":null,"code":"var _jsxFileName = \"/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx\";\nimport React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport Header from './header/header';\nimport _ from 'lodash';\n\nconst App = () => {\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, ({\n    store,\n    actions\n  }) => {\n    const counters = store.counters,\n          sort = store.sort;\n    const total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n    /* const items = counters;\n    \n    let asc = items.sort((a, b) => {\n    \tif (a[sort.column] > b[sort.column]) {\n    \t\treturn 1;\n    \t}\n    \telse if (a[sort.column] < b[sort.column]) {\n    \t\treturn -1;\n    \t}\n    \treturn 0;\n    });\t\n    let desc = items.sort((a, b) => {\n    \tif (b[sort.column] > a[sort.column]) {\n    \t\treturn 1;\n    \t}\n    \telse if (b[sort.column] < a[sort.column]) {\n    \t\treturn -1;\n    \t}\n    \treturn 0;\n    });\t\n    \n    console.log('asc', asc, 'desc', desc); */\n\n    const sorted = _.orderBy(counters, [column], [order]);\n\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      total: total,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CounterHolder, {\n      items: sorted,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default injectContext(App);","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx"],"names":["React","injectContext","Consumer","CounterHolder","Header","_","App","store","actions","counters","sort","total","map","c","count","reduce","acc","val","sorted","orderBy","column","order"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,IAAwBC,QAAxB,QAAwC,qBAAxC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,SACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAwB;AAAA,UAChBC,QADgB,GACGF,KADH,CAChBE,QADgB;AAAA,UACNC,IADM,GACGH,KADH,CACNG,IADM;AAExB,UAAMC,KAAK,GAAGF,QAAQ,CAACG,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAApB,EAA2BC,MAA3B,CAAkC,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAtD,CAAd;AACA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,UAAMC,MAAM,GAAGb,CAAC,CAACc,OAAF,CAAUV,QAAV,EAAoB,CAACW,MAAD,CAApB,EAA8B,CAACC,KAAD,CAA9B,CAAf;;AAGA,WACA,0CACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEV,KAAf;AAAsB,MAAA,OAAO,EAAEH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEU,MAAtB;AAA8B,MAAA,OAAO,EAAEV,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA;AAKA,GAlCF,CADD;AAsCA,CAvCD;;AAyCA,eAAeP,aAAa,CAACK,GAAD,CAA5B","sourcesContent":["import React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport Header from './header/header';\nimport _ from 'lodash';\n\nconst App = () => {\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tconst { counters, sort } = store;\n\t\t\t\tconst total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t/* const items = counters;\n\t\t\t\t\n\t\t\t\tlet asc = items.sort((a, b) => {\n\t\t\t\t\tif (a[sort.column] > b[sort.column]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (a[sort.column] < b[sort.column]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\t\n\t\t\t\tlet desc = items.sort((a, b) => {\n\t\t\t\t\tif (b[sort.column] > a[sort.column]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b[sort.column] < a[sort.column]) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\t\n\t\t\t\t\n\t\t\t\tconsole.log('asc', asc, 'desc', desc); */\n\t\t\t\tconst sorted = _.orderBy(counters, [column], [order])\n\n\n\t\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t<Header total={total} actions={actions} />\n\t\t\t\t<CounterHolder items={sorted} actions={actions} />\n\t\t\t\t</>)\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n"]},"metadata":{},"sourceType":"module"}