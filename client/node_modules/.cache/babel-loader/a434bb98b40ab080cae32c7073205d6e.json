{"ast":null,"code":"var _jsxFileName = \"/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx\";\nimport React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\n\nconst App = () => {\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, ({\n    store,\n    actions\n  }) => {\n    const counters = store.counters,\n          sort = store.sort,\n          query = store.query,\n          filter = store.filter;\n\n    if (counters.length) {\n      const total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n      const items = query !== '' ? counters.filter(c => c.name.toLowerCase().includes(query.toLowerCase())) : counters;\n      const filtered = filter.number !== '' ? filter.type === 'less' ? items.filter(i => i.count < filter.number) : items.filter(i => i.count > filter.number) : items;\n      const sorted = sort.active ? _.orderBy(filtered, [sort.column], [sort.order]) : filtered;\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Searchbox, {\n      onSearch: actions.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(TotalCount, {\n      total: total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, counters.length ? React.createElement(React.Fragment, null, React.createElement(Filters, {\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(CounterHolder, {\n      items: sorted,\n      actions: actions,\n      sort: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"You don't have any counters yet\"), React.createElement(CounterGenerator, {\n      onNewCounter: actions.handleNewCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  });\n};\n\nexport default injectContext(App);","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx"],"names":["React","injectContext","Consumer","CounterHolder","TotalCount","CounterGenerator","_","Searchbox","Filters","App","store","actions","counters","sort","query","filter","length","total","map","c","count","reduce","acc","val","items","name","toLowerCase","includes","filtered","number","type","i","sorted","active","orderBy","column","order","handleSearch","handleNewCounter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\n\nconst App = () => {\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tconst { counters, sort, query, filter } = store;\n\t\t\t\t\n\t\t\t\tif (counters.length) {\n\t\t\t\tconst total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n\t\t\t\tconst items = query !== '' ? counters.filter(c => c.name.toLowerCase().includes(query.toLowerCase())) : counters;\n\t\t\t\tconst filtered = filter.number !== '' ? (filter.type === 'less' ? items.filter(i => i.count < filter.number) : items.filter(i => i.count > filter.number)) : items;\n\t\t\t\tconst sorted = sort.active ? _.orderBy(filtered, [sort.column], [sort.order]) : filtered;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch}/>\n\t\t\t\t\t\t<TotalCount total={total} />\n\t\t\t\t\t</header>\n\n\t\t\t\t\t\n\t\t\t\t\t<main>\n\t\t\t\t\t{counters.length ? \n\t\t\t\t\t<>\n\t\t\t\t\t\t<Filters actions={actions} />\n\t\t\t\t\t\t<CounterHolder items={sorted} actions={actions} sort={sort} />\n\t\t\t\t\t</>: <h1>You don't have any counters yet</h1>}\n\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} /> \n\t\t\t\t\t</main>\t\n\t\t\t\t\t\n\t\t\t\t</>)\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n"]},"metadata":{},"sourceType":"module"}