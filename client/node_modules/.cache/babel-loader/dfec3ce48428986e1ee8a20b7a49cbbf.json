{"ast":null,"code":"import _defineProperty from \"/Users/coni/Desktop/cornershop-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from 'axios';\nimport _ from 'lodash';\nimport { store } from 'react-notifications-component';\nimport { IoIosCheckmarkCircle } from 'react-icons/io';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\nconst notifications = store;\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({\n  getStore,\n  getActions,\n  setStore\n}) => {\n  return {\n    store: {\n      counters: [],\n      filter: {\n        less: false,\n        lessQuery: '',\n        greater: false,\n        greaterQuery: ''\n      },\n      item: {\n        name: '',\n        type: ''\n      },\n      sort: {\n        column: '',\n        order: 'desc',\n        active: true\n      },\n      query: ''\n    },\n    actions: {\n      getCounters: async () => {\n        try {\n          const response = await Axios.get(\"\".concat(apiEndpoint, \"s\"));\n          const counters = response.data;\n          setStore({\n            counters\n          });\n        } catch (error) {\n          notifications.addNotification({\n            title: \"Sorry :(\",\n            message: \"We can't handle your information right now\",\n            type: 'danger',\n            container: 'top-center',\n            animationIn: ['animated', 'fadeIn'],\n            animationOut: ['animated', 'fadeOut'],\n            dismiss: {\n              duration: 3000\n            }\n          });\n        }\n      },\n      handleNewCounter: async title => {\n        if (title.trim() !== '') {\n          const store = getStore();\n          const actions = getActions();\n\n          try {\n            await actions.getCounters();\n            const obj = {\n              title\n            };\n\n            const _ref = await Axios.post(apiEndpoint, obj),\n                  counter = _ref.data;\n\n            const counters = [...store.counters, counter];\n            const filter = {\n              lessQuery: '',\n              greaterQuery: ''\n            };\n            const query = '';\n            notifications.addNotification({\n              title: '',\n              message: \"\".concat(counter.title, \" was successfully added\"),\n              type: 'success',\n              container: 'top-center',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 3000\n              }\n            });\n            setStore({\n              counters,\n              filter,\n              query\n            });\n          } catch (error) {\n            notifications.addNotification({\n              title: \"\".concat(title, \" was not added\"),\n              message: \"Your changes couldn't be saved\",\n              type: 'danger',\n              container: 'top-center',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut']\n            });\n          }\n        }\n      },\n      handleAddition: async item => {\n        const store = getStore();\n        const sort = store.sort;\n        sort.active = false;\n        await setStore({\n          sort\n        });\n        const counters = [...store.counters];\n        const index = counters.indexOf(item);\n        const obj = {\n          id: item.id\n        };\n\n        const _ref2 = await Axios.post(\"\".concat(apiEndpoint, \"/inc\"), obj),\n              counter = _ref2.data;\n\n        counters[index] = _objectSpread({}, counter);\n        setStore({\n          counters\n        });\n      },\n      handleSubstraction: async item => {\n        const store = getStore();\n        const sort = store.sort;\n        sort.active = false;\n        await setStore({\n          sort\n        });\n        const counters = [...store.counters];\n        const index = counters.indexOf(item);\n        const obj = {\n          id: item.id\n        };\n\n        const _ref3 = await Axios.post(\"\".concat(apiEndpoint, \"/dec\"), obj),\n              counter = _ref3.data;\n\n        counters[index] = _objectSpread({}, counter);\n        setStore({\n          counters\n        });\n      },\n      handleDelete: async item => {\n        const store = getStore();\n        const actions = getActions();\n        let allCounters = [...store.counters];\n        let counters = allCounters.filter(c => c !== item);\n\n        if (counters.length) {\n          setStore({\n            counters\n          });\n        } else {\n          actions.cleanSearch();\n        }\n\n        try {\n          const obj = {\n            id: item.id\n          };\n          await Axios.delete(apiEndpoint, {\n            data: obj\n          });\n          notifications.addNotification({\n            title: '',\n            message: \"\".concat(item.title, \" was successfully deleted\"),\n            type: 'success',\n            container: 'top-center',\n            animationIn: ['animated', 'fadeIn'],\n            animationOut: ['animated', 'fadeOut'],\n            dismiss: {\n              duration: 3000\n            }\n          });\n        } catch (error) {\n          notifications.addNotification({\n            title: \"\".concat(item.title, \" was not deleted\"),\n            message: \"Your changes couldn't be saved\",\n            type: 'danger',\n            container: 'top-center',\n            animationIn: ['animated', 'fadeIn'],\n            animationOut: ['animated', 'fadeOut']\n          });\n          setStore({\n            counters: allCounters\n          });\n        }\n      },\n      handleSort: selectedColumn => {\n        const store = getStore();\n\n        let sort = _objectSpread({}, store.sort);\n\n        let sortedCounters = [...store.counters];\n\n        if (sort.column === selectedColumn) {\n          sort.order = sort.order === 'asc' ? 'desc' : 'asc';\n          sort.active = true;\n        } else {\n          sort.column = selectedColumn;\n          sort.order = 'asc';\n          sort.active = true;\n        }\n\n        sortedCounters = sort.active ? _.orderBy(sortedCounters, [sort.column], [sort.order]) : sortedCounters;\n        setStore({\n          sort,\n          counters: sortedCounters\n        });\n      },\n      handleSearch: query => {\n        const store = getStore();\n        const actions = getActions();\n        let allCounters = [...store.counters];\n\n        if (query.trim() !== '') {\n          let counters = store.counters.filter(c => c.title.toLowerCase().includes(query.toLowerCase()));\n          setStore({\n            query,\n            counters,\n            allCounters\n          });\n        } else {\n          actions.getCounters();\n          setStore({\n            query: ''\n          });\n        }\n      },\n      handleFilter: (type, queryType, number) => {\n        const store = getStore();\n        const actions = getActions();\n        let allCounters = [...store.counters];\n\n        const filter = _objectSpread({}, store.filter);\n\n        let query = parseInt(number);\n        query = Number.isNaN(query) ? '' : query;\n\n        if (query !== '') {\n          filter[type] = true;\n          filter[queryType] = query;\n          let counters = [...store.counters];\n\n          if (type === 'less') {\n            counters = counters.filter(i => i.count < filter.lessQuery);\n          } else {\n            counters = counters.filter(i => i.count > filter.greaterQuery);\n          }\n\n          setStore({\n            filter,\n            counters,\n            allCounters\n          });\n        } else {\n          filter[type] = false;\n          filter.lessQuery = '';\n          filter.greaterQuery = '';\n          actions.getCounters();\n          setStore({\n            filter\n          });\n        }\n      },\n      cleanFilter: (type, queryType) => {\n        const store = getStore();\n\n        let filter = _objectSpread({}, store.filter);\n\n        filter[type] = false;\n        filter[queryType] = '';\n        setStore({\n          filter\n        });\n      },\n      cleanSearch: () => {\n        const store = getStore();\n        const actions = getActions();\n\n        let filter = _objectSpread({}, store.filter);\n\n        filter.less = false;\n        filter.lessQuery = '';\n        filter.greater = false;\n        filter.greaterQuery = '';\n        actions.getCounters();\n        setStore({\n          query: '',\n          filter\n        });\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/store/flux.js"],"names":["Axios","_","store","IoIosCheckmarkCircle","notifications","apiEndpoint","getState","getStore","getActions","setStore","counters","filter","less","lessQuery","greater","greaterQuery","item","name","type","sort","column","order","active","query","actions","getCounters","response","get","data","error","addNotification","title","message","container","animationIn","animationOut","dismiss","duration","handleNewCounter","trim","obj","post","counter","handleAddition","index","indexOf","id","handleSubstraction","handleDelete","allCounters","c","length","cleanSearch","delete","handleSort","selectedColumn","sortedCounters","orderBy","handleSearch","toLowerCase","includes","handleFilter","queryType","number","parseInt","Number","isNaN","i","count","cleanFilter"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport _ from 'lodash';\nimport { store } from 'react-notifications-component';\nimport { IoIosCheckmarkCircle } from 'react-icons/io';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\n\nconst notifications = store;\n\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [],\n\t\t\tfilter: {\n\t\t\t\tless: false,\n\t\t\t\tlessQuery: '',\n\t\t\t\tgreater: false,\n\t\t\t\tgreaterQuery: ''\n\t\t\t},\n\t\t\titem: {\n\t\t\t\tname: '',\n\t\t\t\ttype: ''\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tcolumn: '',\n\t\t\t\torder: 'desc',\n\t\t\t\tactive: true\n\t\t\t},\n\t\t\tquery: ''\n\t\t},\n\t\tactions: {\n\t\t\tgetCounters: async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await Axios.get(`${apiEndpoint}s`);\n\t\t\t\t\tconst counters = response.data;\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tnotifications.addNotification({\n\t\t\t\t\t\ttitle: `Sorry :(`,\n\t\t\t\t\t\tmessage: `We can't handle your information right now`,\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tcontainer: 'top-center',\n\t\t\t\t\t\tanimationIn: [ 'animated', 'fadeIn' ],\n\t\t\t\t\t\tanimationOut: [ 'animated', 'fadeOut' ],\n\t\t\t\t\t\tdismiss: {\n\t\t\t\t\t\t\tduration: 3000\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleNewCounter: async (title) => {\n\t\t\t\tif (title.trim() !== '') {\n\t\t\t\t\tconst store = getStore();\n\t\t\t\t\tconst actions = getActions();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait actions.getCounters();\n\t\t\t\t\t\tconst obj = { title };\n\t\t\t\t\t\tconst { data: counter } = await Axios.post(apiEndpoint, obj);\n\t\t\t\t\t\tconst counters = [ ...store.counters, counter ];\n\n\t\t\t\t\t\tconst filter = { lessQuery: '', greaterQuery: '' };\n\t\t\t\t\t\tconst query = '';\n\n\t\t\t\t\t\tnotifications.addNotification({\n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\tmessage: `${counter.title} was successfully added`,\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tcontainer: 'top-center',\n\t\t\t\t\t\t\tanimationIn: [ 'animated', 'fadeIn' ],\n\t\t\t\t\t\t\tanimationOut: [ 'animated', 'fadeOut' ],\n\t\t\t\t\t\t\tdismiss: {\n\t\t\t\t\t\t\t\tduration: 3000\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsetStore({ counters, filter, query });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tnotifications.addNotification({\n\t\t\t\t\t\t\ttitle: `${title} was not added`,\n\t\t\t\t\t\t\tmessage: `Your changes couldn't be saved`,\n\t\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\t\tcontainer: 'top-center',\n\t\t\t\t\t\t\tanimationIn: [ 'animated', 'fadeIn' ],\n\t\t\t\t\t\t\tanimationOut: [ 'animated', 'fadeOut' ]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleAddition: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/inc`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/dec`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleDelete: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\t\t\t\tlet counters = allCounters.filter((c) => c !== item);\n\t\t\t\tif (counters.length) {\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.cleanSearch();\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = { id: item.id };\n\t\t\t\t\tawait Axios.delete(apiEndpoint, { data: obj });\n\n\t\t\t\t\tnotifications.addNotification({\n\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\tmessage: `${item.title} was successfully deleted`,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tcontainer: 'top-center',\n\t\t\t\t\t\tanimationIn: [ 'animated', 'fadeIn' ],\n\t\t\t\t\t\tanimationOut: [ 'animated', 'fadeOut' ],\n\t\t\t\t\t\tdismiss: {\n\t\t\t\t\t\t\tduration: 3000\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tnotifications.addNotification({\n\t\t\t\t\t\ttitle: `${item.title} was not deleted`,\n\t\t\t\t\t\tmessage: `Your changes couldn't be saved`,\n\t\t\t\t\t\ttype: 'danger',\n\t\t\t\t\t\tcontainer: 'top-center',\n\t\t\t\t\t\tanimationIn: [ 'animated', 'fadeIn' ],\n\t\t\t\t\t\tanimationOut: [ 'animated', 'fadeOut' ]\n\t\t\t\t\t});\n\t\t\t\t\tsetStore({ counters: allCounters });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleSort: (selectedColumn) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet sort = { ...store.sort };\n\t\t\t\tlet sortedCounters = [ ...store.counters ];\n\n\t\t\t\tif (sort.column === selectedColumn) {\n\t\t\t\t\tsort.order = sort.order === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t} else {\n\t\t\t\t\tsort.column = selectedColumn;\n\t\t\t\t\tsort.order = 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t}\n\n\t\t\t\tsortedCounters = sort.active\n\t\t\t\t\t? _.orderBy(sortedCounters, [ sort.column ], [ sort.order ])\n\t\t\t\t\t: sortedCounters;\n\n\t\t\t\tsetStore({ sort, counters: sortedCounters });\n\t\t\t},\n\t\t\thandleSearch: (query) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tif (query.trim() !== '') {\n\t\t\t\t\tlet counters = store.counters.filter((c) => c.title.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\tsetStore({ query, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ query: '' });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleFilter: (type, queryType, number) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tconst filter = { ...store.filter };\n\t\t\t\tlet query = parseInt(number);\n\t\t\t\tquery = Number.isNaN(query) ? '' : query;\n\n\t\t\t\tif (query !== '') {\n\t\t\t\t\tfilter[type] = true;\n\t\t\t\t\tfilter[queryType] = query;\n\t\t\t\t\tlet counters = [ ...store.counters ];\n\n\t\t\t\t\tif (type === 'less') {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count < filter.lessQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count > filter.greaterQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStore({ filter, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tfilter[type] = false;\n\t\t\t\t\tfilter.lessQuery = '';\n\t\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ filter });\n\t\t\t\t}\n\t\t\t},\n\t\t\tcleanFilter: (type, queryType) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter[type] = false;\n\t\t\t\tfilter[queryType] = '';\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanSearch: () => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter.less = false;\n\t\t\t\tfilter.lessQuery = '';\n\t\t\t\tfilter.greater = false;\n\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\tactions.getCounters();\n\t\t\t\tsetStore({ query: '', filter });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n"]},"metadata":{},"sourceType":"module"}