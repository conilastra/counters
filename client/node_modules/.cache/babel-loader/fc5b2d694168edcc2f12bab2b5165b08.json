{"ast":null,"code":"var _jsxFileName = \"/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx\";\nimport React, { useEffect } from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './messages/messages';\nimport ReactNotifications from 'react-notifications-component';\n\nconst App = () => {\n  let localActions = null;\n  useEffect(() => {\n    if (localActions !== null) {\n      localActions.getCounters();\n    }\n  }, []);\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    store,\n    actions\n  }) => {\n    let counters = store.counters,\n        sort = store.sort,\n        query = store.query,\n        filter = store.filter;\n    localActions = actions;\n    let total = '';\n\n    if (counters.length) {\n      total = counters.map(c => c.count).reduce((acc, val) => acc + val);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ReactNotifications, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Searchbox, {\n      onSearch: actions.handleSearch,\n      value: store.query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(TotalCount, {\n      total: total ? total : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(Filters, {\n      actions: actions,\n      value: store.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, counters.length ? React.createElement(CounterHolder, {\n      items: counters,\n      actions: actions,\n      sort: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : query || filter.less || filter.greater ? React.createElement(NoMatchingItems, {\n      onGoBack: () => actions.cleanSearch(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(NoCounters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(CounterGenerator, {\n      onNewCounter: actions.handleNewCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  });\n};\n\nexport default injectContext(App);","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx"],"names":["React","useEffect","injectContext","Consumer","CounterHolder","TotalCount","CounterGenerator","_","Searchbox","Filters","NoCounters","NoMatchingItems","ReactNotifications","App","localActions","getCounters","store","actions","counters","sort","query","filter","total","length","map","c","count","reduce","acc","val","handleSearch","less","greater","cleanSearch","handleNewCounter"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './messages/messages';\nimport ReactNotifications from 'react-notifications-component';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tlet { counters, sort, query, filter } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\n\t\t\t\tif (counters.length) {\n\t\t\t\t\ttotal = counters.map((c) => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<ReactNotifications />\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t{counters.length ? (\n\t\t\t\t\t\t\t\t<CounterHolder items={counters} actions={actions} sort={sort} />\n\t\t\t\t\t\t\t) : query || filter.less || filter.greater ? (\n\t\t\t\t\t\t\t\t<NoMatchingItems onGoBack={() => actions.cleanSearch()} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<NoCounters />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} />\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n"]},"metadata":{},"sourceType":"module"}