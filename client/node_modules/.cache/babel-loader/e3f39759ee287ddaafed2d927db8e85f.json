{"ast":null,"code":"import _defineProperty from \"/Users/coni/Desktop/cornershop-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst getState = ({\n  getStore,\n  getActions,\n  setStore\n}) => {\n  return {\n    store: {\n      counters: [{\n        name: 'Dogs',\n        count: 0\n      }, {\n        name: 'Cats',\n        count: 0\n      }, {\n        name: 'Owls',\n        count: 0\n      }]\n    },\n    actions: {\n      handleAddition: item => {\n        const store = getStore();\n        const counters = [...store.counters];\n        const index = counters.indexOf(item);\n        counters[index] = _objectSpread({}, item);\n        counters[index].count += 1;\n        setStore({\n          counters\n        });\n      },\n      handleSubstraction: item => {\n        const store = getStore();\n        const counters = [...store.counters];\n        const index = counters.indexOf(item);\n        counters[index] = _objectSpread({}, item);\n        counters[index].count -= 1;\n        setStore({\n          counters\n        });\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/store/flux.js"],"names":["getState","getStore","getActions","setStore","store","counters","name","count","actions","handleAddition","item","index","indexOf","handleSubstraction"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AACxD,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNC,MAAAA,QAAQ,EAAE,CAAE;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAF,EAA8B;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAA9B,EAA0D;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAA1D;AADJ,KADD;AAINC,IAAAA,OAAO,EAAE;AACRC,MAAAA,cAAc,EAAGC,IAAD,IAAU;AACzB,cAAMN,KAAK,GAAGH,QAAQ,EAAtB;AACA,cAAMI,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAACC,QAAX,CAAjB;AACA,cAAMM,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBF,IAAjB,CAAd;AACAL,QAAAA,QAAQ,CAACM,KAAD,CAAR,qBAAuBD,IAAvB;AACAL,QAAAA,QAAQ,CAACM,KAAD,CAAR,CAAgBJ,KAAhB,IAAyB,CAAzB;AAEAJ,QAAAA,QAAQ,CAAC;AAAEE,UAAAA;AAAF,SAAD,CAAR;AACA,OATO;AAURQ,MAAAA,kBAAkB,EAAGH,IAAD,IAAU;AAC7B,cAAMN,KAAK,GAAGH,QAAQ,EAAtB;AACA,cAAMI,QAAQ,GAAG,CAAE,GAAGD,KAAK,CAACC,QAAX,CAAjB;AACA,cAAMM,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBF,IAAjB,CAAd;AACAL,QAAAA,QAAQ,CAACM,KAAD,CAAR,qBAAuBD,IAAvB;AACAL,QAAAA,QAAQ,CAACM,KAAD,CAAR,CAAgBJ,KAAhB,IAAyB,CAAzB;AAEAJ,QAAAA,QAAQ,CAAC;AAAEE,UAAAA;AAAF,SAAD,CAAR;AACA;AAlBO;AAJH,GAAP;AAyBA,CA1BD;;AA4BA,eAAeL,QAAf","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [ { name: 'Dogs', count: 0 }, { name: 'Cats', count: 0 }, { name: 'Owls', count: 0 } ]\n\t\t},\n\t\tactions: {\n\t\t\thandleAddition: (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\t\t\t\tcounters[index] = { ...item };\n\t\t\t\tcounters[index].count += 1;\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\t\t\t\tcounters[index] = { ...item };\n\t\t\t\tcounters[index].count -= 1;\n\n\t\t\t\tsetStore({ counters });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n"]},"metadata":{},"sourceType":"module"}