{"ast":null,"code":"import React,{useEffect}from'react';import'./app.css';import injectContext,{Consumer}from'../store/appContext';import CounterHolder from'./counterHolder/counterHolder';import TotalCount from'./totalCount/totalCount';import CounterGenerator from'./counterGenerator/counterGenerator';import Searchbox from'./searchbox/searchbox';import Filters from'./filters/filters';import{NoCounters,NoMatchingItems}from'./messages/messages';import ReactNotifications from'react-notifications-component';var App=function App(){var localActions=null;useEffect(function(){if(localActions!==null){localActions.getCounters();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return React.createElement(Consumer,null,function(_ref){var store=_ref.store,actions=_ref.actions;var counters=store.counters,sort=store.sort,query=store.query,filter=store.filter;localActions=actions;var total='';if(counters.length){total=counters.map(function(c){return c.count;}).reduce(function(acc,val){return acc+val;});}return React.createElement(React.Fragment,null,React.createElement(ReactNotifications,null),React.createElement(\"header\",{className:\"header\"},React.createElement(Searchbox,{onSearch:actions.handleSearch,value:store.query}),React.createElement(TotalCount,{total:total?total:0})),React.createElement(Filters,{actions:actions,value:store.filter}),React.createElement(\"main\",{className:\"main\"},counters.length?React.createElement(CounterHolder,{items:counters,actions:actions,sort:sort}):query||filter.less||filter.greater?React.createElement(NoMatchingItems,{onGoBack:function onGoBack(){return actions.cleanSearch();}}):React.createElement(NoCounters,null),React.createElement(CounterGenerator,{onNewCounter:actions.handleNewCounter})));});};export default injectContext(App);","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/components/app.jsx"],"names":["React","useEffect","injectContext","Consumer","CounterHolder","TotalCount","CounterGenerator","Searchbox","Filters","NoCounters","NoMatchingItems","ReactNotifications","App","localActions","getCounters","store","actions","counters","sort","query","filter","total","length","map","c","count","reduce","acc","val","handleSearch","less","greater","cleanSearch","handleNewCounter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,aAAP,EAAwBC,QAAxB,KAAwC,qBAAxC,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qCAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,qBAA5C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,+BAA/B,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACjB,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CAEAZ,SAAS,CAAC,UAAM,CACf,GAAIY,YAAY,GAAK,IAArB,CAA2B,CAC1BA,YAAY,CAACC,WAAb,GACA,CACD;AACA,CALQ,CAKN,EALM,CAAT,CAOA,MACC,qBAAC,QAAD,MACE,cAAwB,IAArBC,CAAAA,KAAqB,MAArBA,KAAqB,CAAdC,OAAc,MAAdA,OAAc,IAClBC,CAAAA,QADkB,CACgBF,KADhB,CAClBE,QADkB,CACRC,IADQ,CACgBH,KADhB,CACRG,IADQ,CACFC,KADE,CACgBJ,KADhB,CACFI,KADE,CACKC,MADL,CACgBL,KADhB,CACKK,MADL,CAExBP,YAAY,CAAGG,OAAf,CACA,GAAIK,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAIJ,QAAQ,CAACK,MAAb,CAAqB,CACpBD,KAAK,CAAGJ,QAAQ,CAACM,GAAT,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAT,EAAb,EAA6BC,MAA7B,CAAoC,SAACC,GAAD,CAAMC,GAAN,QAAcD,CAAAA,GAAG,CAAGC,GAApB,EAApC,CAAR,CACA,CAED,MACC,yCACC,oBAAC,kBAAD,MADD,CAEC,8BAAQ,SAAS,CAAC,QAAlB,EACC,oBAAC,SAAD,EAAW,QAAQ,CAAEZ,OAAO,CAACa,YAA7B,CAA2C,KAAK,CAAEd,KAAK,CAACI,KAAxD,EADD,CAEC,oBAAC,UAAD,EAAY,KAAK,CAAEE,KAAK,CAAGA,KAAH,CAAW,CAAnC,EAFD,CAFD,CAOC,oBAAC,OAAD,EAAS,OAAO,CAAEL,OAAlB,CAA2B,KAAK,CAAED,KAAK,CAACK,MAAxC,EAPD,CAQC,4BAAM,SAAS,CAAC,MAAhB,EACEH,QAAQ,CAACK,MAAT,CACA,oBAAC,aAAD,EAAe,KAAK,CAAEL,QAAtB,CAAgC,OAAO,CAAED,OAAzC,CAAkD,IAAI,CAAEE,IAAxD,EADA,CAEGC,KAAK,EAAIC,MAAM,CAACU,IAAhB,EAAwBV,MAAM,CAACW,OAA/B,CACH,oBAAC,eAAD,EAAiB,QAAQ,CAAE,0BAAMf,CAAAA,OAAO,CAACgB,WAAR,EAAN,EAA3B,EADG,CAGH,oBAAC,UAAD,MANF,CAQC,oBAAC,gBAAD,EAAkB,YAAY,CAAEhB,OAAO,CAACiB,gBAAxC,EARD,CARD,CADD,CAqBA,CA/BF,CADD,CAmCA,CA7CD,CA+CA,cAAe/B,CAAAA,aAAa,CAACU,GAAD,CAA5B","sourcesContent":["import React, { useEffect } from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './messages/messages';\nimport ReactNotifications from 'react-notifications-component';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tlet { counters, sort, query, filter } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\n\t\t\t\tif (counters.length) {\n\t\t\t\t\ttotal = counters.map((c) => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ReactNotifications />\n\t\t\t\t\t\t<header className=\"header\">\n\t\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t\t<main className=\"main\">\n\t\t\t\t\t\t\t{counters.length ? (\n\t\t\t\t\t\t\t\t<CounterHolder items={counters} actions={actions} sort={sort} />\n\t\t\t\t\t\t\t) : query || filter.less || filter.greater ? (\n\t\t\t\t\t\t\t\t<NoMatchingItems onGoBack={() => actions.cleanSearch()} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<NoCounters />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} />\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n"]},"metadata":{},"sourceType":"module"}