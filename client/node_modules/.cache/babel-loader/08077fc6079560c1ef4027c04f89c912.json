{"ast":null,"code":"import _defineProperty from \"/Users/coni/Desktop/cornershop-test/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/coni/Desktop/cornershop-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/coni/Desktop/cornershop-test/client/src/store/appContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport getState from './flux.js';\nimport axios from 'axios';\n\nconst _React$createContext = React.createContext(null),\n      Consumer = _React$createContext.Consumer,\n      Provider = _React$createContext.Provider;\n\nexport { Consumer, Provider };\n\nconst injectContext = PassedComponent => {\n  const StoreWrapper = props => {\n    const _useState = useState(getState({\n      getStore: () => state.store,\n      getActions: () => state.actions,\n      setStore: updatedStore => setState({\n        store: Object.assign(state.store, updatedStore),\n        actions: _objectSpread({}, state.actions)\n      })\n    })),\n          _useState2 = _slicedToArray(_useState, 2),\n          state = _useState2[0],\n          setState = _useState2[1];\n\n    useEffect(() => {\n      async () => {\n        const response = await axios.get('http://localhost:3000/api/v1/counters');\n        console.log(response);\n      };\n    }, []);\n    return React.createElement(Provider, {\n      value: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(PassedComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  };\n\n  return StoreWrapper;\n};\n\nexport default injectContext;","map":{"version":3,"sources":["/Users/coni/Desktop/cornershop-test/client/src/store/appContext.js"],"names":["React","useState","useEffect","getState","axios","createContext","Consumer","Provider","injectContext","PassedComponent","StoreWrapper","props","getStore","state","store","getActions","actions","setStore","updatedStore","setState","Object","assign","response","get","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;6BAEsCJ,KAAK,CAACK,aAAN,CAAoB,IAApB,C;MAAvBC,Q,wBAAAA,Q;MAAUC,Q,wBAAAA,Q;;;;AAEzB,MAAMC,aAAa,GAAIC,eAAD,IAAqB;AAC1C,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,sBACHV,QAAQ,CACnCE,QAAQ,CAAC;AACRS,MAAAA,QAAQ,EAAE,MAAMC,KAAK,CAACC,KADd;AAERC,MAAAA,UAAU,EAAE,MAAMF,KAAK,CAACG,OAFhB;AAGRC,MAAAA,QAAQ,EAAGC,YAAD,IACTC,QAAQ,CAAC;AACRL,QAAAA,KAAK,EAAEM,MAAM,CAACC,MAAP,CAAcR,KAAK,CAACC,KAApB,EAA2BI,YAA3B,CADC;AAERF,QAAAA,OAAO,oBAAOH,KAAK,CAACG,OAAb;AAFC,OAAD;AAJD,KAAD,CAD2B,CADL;AAAA;AAAA,UACvBH,KADuB;AAAA,UAChBM,QADgB;;AAa/BjB,IAAAA,SAAS,CAAC,MAAM;AACf,kBAAY;AACX,cAAMoB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,uCAAV,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,OAHD;AAIA,KALQ,EAKN,EALM,CAAT;AAOA,WACC,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,eAAD,oBAAqBF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADD;AAKA,GAzBD;;AA0BA,SAAOD,YAAP;AACA,CA5BD;;AA8BA,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getState from './flux.js';\nimport axios from 'axios';\n\nexport const { Consumer, Provider } = React.createContext(null);\n\nconst injectContext = (PassedComponent) => {\n\tconst StoreWrapper = (props) => {\n\t\tconst [ state, setState ] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: (updatedStore) =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\tuseEffect(() => {\n\t\t\tasync () => {\n\t\t\t\tconst response = await axios.get('http://localhost:3000/api/v1/counters');\n\t\t\t\tconsole.log(response);\n\t\t\t};\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;\n"]},"metadata":{},"sourceType":"module"}