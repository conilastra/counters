{"version":3,"sources":["store/flux.js","store/appContext.js","components/counter/counter.jsx","components/counterHolder/counterHolder.jsx","components/totalCount/totalCount.jsx","components/counterGenerator/counterGenerator.jsx","components/searchbox/searchbox.jsx","components/filters/filters.jsx","components/errorMessages/errorMessages.jsx","components/app.jsx","index.js"],"names":["getState","getStore","getActions","setStore","store","counters","allCounters","sort","column","order","active","query","filter","less","lessQuery","greater","greaterQuery","actions","getCounters","a","Axios","get","response","data","handleNewCounter","title","trim","obj","post","counter","handleAddition","item","index","indexOf","id","handleSubstraction","handleDelete","c","length","cleanSearch","delete","handleSort","selectedColumn","sortedCounters","_","orderBy","handleSearch","toLowerCase","includes","handleFilter","type","queryType","number","parseInt","Number","isNaN","i","count","cleanFilter","React","createContext","Consumer","Provider","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","value","Counter","className","onClick","e","CounterTable","items","map","key","name","TotalCount","total","CounterGenerator","onNewCounter","setTitle","display","setDisplay","autocomplete","onSubmit","preventDefault","placeholder","onChange","target","handleInput","Searchbox","onSearch","Filters","htmlFor","NoCounters","NoMatchingItems","onGoBack","localActions","useEffect","reduce","acc","val","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f542482.chunk.js","sourcesContent":["import Axios from 'axios';\nimport _ from 'lodash';\n\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [],\n\t\t\tallCounters: [],\n\t\t\tsort: {\n\t\t\t\tcolumn: '',\n\t\t\t\torder: 'desc',\n\t\t\t\tactive: true\n\t\t\t},\n\t\t\tquery: '',\n\t\t\tfilter: {\n\t\t\t\tless: false,\n\t\t\t\tlessQuery: '',\n\t\t\t\tgreater: false,\n\t\t\t\tgreaterQuery: ''\n\t\t\t}\n\t\t},\n\t\tactions: {\n\t\t\tgetCounters: async () => {\n\t\t\t\tconst response = await Axios.get(`${apiEndpoint}s`);\n\t\t\t\tconst counters = response.data;\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleNewCounter: async (title) => {\n\t\t\t\tif (title.trim() !== '') {\n\t\t\t\t\tconst store = getStore();\n\t\t\t\t\tconst actions = getActions();\n\t\t\t\t\tawait actions.getCounters();\n\n\t\t\t\t\tconst obj = { title };\n\t\t\t\t\tconst { data: counter } = await Axios.post(apiEndpoint, obj);\n\t\t\t\t\tconst counters = [ ...store.counters, counter ];\n\n\t\t\t\t\tconst filter = { lessQuery: '', greaterQuery: '' };\n\t\t\t\t\tconst query = '';\n\n\t\t\t\t\tsetStore({ counters, filter, query });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleAddition: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/inc`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/dec`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleDelete: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet counters = [ ...store.counters ];\n\t\t\t\tcounters = counters.filter((c) => c !== item);\n\t\t\t\tif (counters.length) {\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.cleanSearch();\n\t\t\t\t}\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tawait Axios.delete(apiEndpoint, { data: obj });\n\t\t\t},\n\t\t\thandleSort: (selectedColumn) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet sort = { ...store.sort };\n\t\t\t\tlet sortedCounters = [ ...store.counters ];\n\n\t\t\t\tif (sort.column === selectedColumn) {\n\t\t\t\t\tsort.order = sort.order === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t} else {\n\t\t\t\t\tsort.column = selectedColumn;\n\t\t\t\t\tsort.order = 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t}\n\n\t\t\t\tsortedCounters = sort.active\n\t\t\t\t\t? _.orderBy(sortedCounters, [ sort.column ], [ sort.order ])\n\t\t\t\t\t: sortedCounters;\n\n\t\t\t\tsetStore({ sort, counters: sortedCounters });\n\t\t\t},\n\t\t\thandleSearch: (query) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tif (query.trim() !== '') {\n\t\t\t\t\tlet counters = store.counters.filter((c) => c.title.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\tsetStore({ query, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ query: '' });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleFilter: (type, queryType, number) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tconst filter = { ...store.filter };\n\t\t\t\tlet query = parseInt(number);\n\t\t\t\tquery = Number.isNaN(query) ? '' : query;\n\n\t\t\t\tif (query !== '') {\n\t\t\t\t\tfilter[type] = true;\n\t\t\t\t\tfilter[queryType] = query;\n\t\t\t\t\tlet counters = [ ...store.counters ];\n\n\t\t\t\t\tif (type === 'less') {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count < filter.lessQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count > filter.greaterQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStore({ filter, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tfilter[type] = false;\n\t\t\t\t\tfilter.lessQuery = '';\n\t\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ filter });\n\t\t\t\t}\n\t\t\t},\n\t\t\tcleanFilter: (type, queryType) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter[type] = false;\n\t\t\t\tfilter[queryType] = '';\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanSearch: () => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter.less = false;\n\t\t\t\tfilter.lessQuery = '';\n\t\t\t\tfilter.greater = false;\n\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\tactions.getCounters();\n\t\t\t\tsetStore({ query: '', filter });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n","import React, { useState } from 'react';\nimport getState from './flux.js';\n\nexport const { Consumer, Provider } = React.createContext(null);\n\nconst injectContext = (PassedComponent) => {\n\tconst StoreWrapper = (props) => {\n\t\tconst [ state, setState ] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: (updatedStore) =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\treturn (\n\t\t\t<Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;\n","import React from 'react';\nimport './counter.css';\n\nconst Counter = ({ item, actions }) => {\n\tconst { title, count } = item;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{title}</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleSubstraction(item)}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t\t<td className=\"text-center\">{count}</td>\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleAddition(item)}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"delete-btn\" onClick={(e) => actions.handleDelete(item)}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from '../counter/counter';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiArrowUnsorted } from 'react-icons/ti';\nimport './counterHolder.css';\n\nconst CounterTable = ({ items, actions, sort }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th className=\"clickable\" onClick={() => actions.handleSort('title')}>\n\t\t\t\t\t\tTitle\n\t\t\t\t\t\t{sort.column === 'title' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th className=\"clickable text-center\" onClick={() => actions.handleSort('count')}>\n\t\t\t\t\t\t#\n\t\t\t\t\t\t{sort.column === 'count' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th />\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{items.map((item) => {\n\t\t\t\t\treturn <Counter item={item} key={item.name} actions={actions} />;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default CounterTable;\n","import React from 'react';\nimport './totalCount.css';\n\nconst TotalCount = ({ total }) => {\n\treturn (\n\t\t<div>\n\t\t\tTOTAL: <div className=\"total\">{total}</div>\n\t\t</div>\n\t);\n};\n\nexport default TotalCount;\n","import React, { useState } from 'react';\nimport './counterGenerator.css';\n\nconst CounterGenerator = ({ onNewCounter }) => {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ display, setDisplay ] = useState('hidden');\n\n\tconst handleInput = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetTitle(value);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tautocomplete=\"off\"\n\t\t\tclassName=\"counter-generator\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetTitle('');\n\t\t\t\tonNewCounter(title);\n\t\t\t}}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"counter-generator__btn\"\n\t\t\t\tonClick={() => (display === '' ? setDisplay('hidden') : setDisplay(''))}\n\t\t\t>\n\t\t\t\tCreate counter\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\tname=\"title\"\n\t\t\t\tvalue={title}\n\t\t\t\tplaceholder=\"Name your counter\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={display}\n\t\t\t\tonChange={(e) => handleInput(e)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default CounterGenerator;\n","import React from 'react';\nimport './searchbox.css';\nimport { IoIosSearch } from 'react-icons/io';\n\nconst Searchbox = ({ onSearch, value }) => {\n\treturn (\n\t\t<div className=\"searchbox\">\n\t\t\t<input\n\t\t\t\tname=\"query\"\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => onSearch(e.target.value)}\n\t\t\t/>\n\t\t\t<span className=\"searchbox__icon\">\n\t\t\t\t<IoIosSearch />\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Searchbox;\n","import React, { useState } from 'react';\nimport './filters.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { FaSlidersH } from 'react-icons/fa';\n\nconst Filters = ({ actions, value }) => {\n\tconst [ display, setDisplay ] = useState('hide');\n\n\tconst toggleDisplay = () => {\n\t\tif (display === 'hide') {\n\t\t\tsetDisplay('show');\n\t\t} else {\n\t\t\tsetDisplay('hide');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"filters\">\n\t\t\t<div className=\"filters__header\" onClick={toggleDisplay}>\n\t\t\t\t<h6>Filter your results</h6>\n\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t<FaSlidersH />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={display}>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"less\">Less than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"less\"\n\t\t\t\t\t\tvalue={value.lessQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('less', 'lessQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"greater\">Greater than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"greater\"\n\t\t\t\t\t\tvalue={value.greaterQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('greater', 'greaterQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Filters;\n","import React from 'react';\n\nconst NoCounters = () => {\n\treturn <h1 className=\"text-center\">Create your first counter!</h1>;\n};\n\nconst NoMatchingItems = ({ onGoBack }) => {\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t<p>None of the counters match the specified conditions :(</p>\n\t\t\t<span className=\"link\" onClick={onGoBack}>\n\t\t\t\tGo back\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport { NoCounters, NoMatchingItems };\n","import React, { useEffect } from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './errorMessages/errorMessages';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tlet { counters, sort, query, filter } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\n\t\t\t\tif (counters.length) {\n\t\t\t\t\ttotal = counters.map((c) => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t{counters.length ? (\n\t\t\t\t\t\t\t\t<CounterHolder items={counters} actions={actions} sort={sort} />\n\t\t\t\t\t\t\t) : query || filter.less || filter.greater ? (\n\t\t\t\t\t\t\t\t<NoMatchingItems onGoBack={() => actions.cleanSearch()} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<NoCounters />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} />\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}