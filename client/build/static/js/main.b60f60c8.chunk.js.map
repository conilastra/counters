{"version":3,"sources":["store/flux.js","store/appContext.js","components/counter/counter.jsx","components/counterHolder/counterHolder.jsx","components/totalCount/totalCount.jsx","components/counterGenerator/counterGenerator.jsx","components/searchbox/searchbox.jsx","components/filters/filters.jsx","components/messages/messages.jsx","components/app.jsx","index.js"],"names":["getState","getStore","getActions","setStore","store","counters","filter","less","lessQuery","greater","greaterQuery","item","name","type","sort","column","order","active","query","actions","getCounters","a","Axios","get","response","data","handleNewCounter","title","trim","obj","post","counter","handleAddition","index","indexOf","id","handleSubstraction","handleDelete","c","length","cleanSearch","delete","deletedItem","handleSort","selectedColumn","sortedCounters","_","orderBy","handleSearch","allCounters","toLowerCase","includes","handleFilter","queryType","number","parseInt","Number","isNaN","i","count","cleanFilter","React","createContext","Consumer","Provider","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","value","Counter","className","onClick","CounterTable","items","map","key","TotalCount","total","CounterGenerator","onNewCounter","setTitle","display","setDisplay","autocomplete","onSubmit","e","preventDefault","placeholder","onChange","target","handleInput","Searchbox","onSearch","Filters","htmlFor","NoCounters","NoMatchingItems","onGoBack","localActions","useEffect","reduce","acc","val","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b60f60c8.chunk.js","sourcesContent":["import Axios from 'axios';\nimport _ from 'lodash';\n\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [],\n\t\t\tfilter: {\n\t\t\t\tless: false,\n\t\t\t\tlessQuery: '',\n\t\t\t\tgreater: false,\n\t\t\t\tgreaterQuery: ''\n\t\t\t},\n\t\t\titem: {\n\t\t\t\tname: '',\n\t\t\t\ttype: ''\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tcolumn: '',\n\t\t\t\torder: 'desc',\n\t\t\t\tactive: true\n\t\t\t},\n\t\t\tquery: ''\n\t\t},\n\t\tactions: {\n\t\t\tgetCounters: async () => {\n\t\t\t\tconst response = await Axios.get(`${apiEndpoint}s`);\n\t\t\t\tconst counters = response.data;\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleNewCounter: async (title) => {\n\t\t\t\tif (title.trim() !== '') {\n\t\t\t\t\tconst store = getStore();\n\t\t\t\t\tconst actions = getActions();\n\t\t\t\t\tawait actions.getCounters();\n\n\t\t\t\t\tconst obj = { title };\n\t\t\t\t\tconst { data: counter } = await Axios.post(apiEndpoint, obj);\n\t\t\t\t\tconst counters = [ ...store.counters, counter ];\n\n\t\t\t\t\tconst filter = { lessQuery: '', greaterQuery: '' };\n\t\t\t\t\tconst query = '';\n\n\t\t\t\t\tconst item = {};\n\t\t\t\t\titem.name = counter.name;\n\t\t\t\t\titem.type = 'add';\n\n\t\t\t\t\tsetStore({ counters, filter, query, item });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleAddition: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/inc`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/dec`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleDelete: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet counters = [ ...store.counters ];\n\t\t\t\tcounters = counters.filter((c) => c !== item);\n\t\t\t\tif (counters.length) {\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.cleanSearch();\n\t\t\t\t}\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tawait Axios.delete(apiEndpoint, { data: obj });\n\n\t\t\t\tconst deletedItem = {};\n\t\t\t\tdeletedItem.name = item.name;\n\t\t\t\tdeletedItem.type = 'delete';\n\t\t\t\tsetStore({ item: deletedItem });\n\t\t\t},\n\t\t\thandleSort: (selectedColumn) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet sort = { ...store.sort };\n\t\t\t\tlet sortedCounters = [ ...store.counters ];\n\n\t\t\t\tif (sort.column === selectedColumn) {\n\t\t\t\t\tsort.order = sort.order === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t} else {\n\t\t\t\t\tsort.column = selectedColumn;\n\t\t\t\t\tsort.order = 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t}\n\n\t\t\t\tsortedCounters = sort.active\n\t\t\t\t\t? _.orderBy(sortedCounters, [ sort.column ], [ sort.order ])\n\t\t\t\t\t: sortedCounters;\n\n\t\t\t\tsetStore({ sort, counters: sortedCounters });\n\t\t\t},\n\t\t\thandleSearch: (query) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tif (query.trim() !== '') {\n\t\t\t\t\tlet counters = store.counters.filter((c) => c.title.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\tsetStore({ query, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ query: '' });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleFilter: (type, queryType, number) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tconst filter = { ...store.filter };\n\t\t\t\tlet query = parseInt(number);\n\t\t\t\tquery = Number.isNaN(query) ? '' : query;\n\n\t\t\t\tif (query !== '') {\n\t\t\t\t\tfilter[type] = true;\n\t\t\t\t\tfilter[queryType] = query;\n\t\t\t\t\tlet counters = [ ...store.counters ];\n\n\t\t\t\t\tif (type === 'less') {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count < filter.lessQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count > filter.greaterQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStore({ filter, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tfilter[type] = false;\n\t\t\t\t\tfilter.lessQuery = '';\n\t\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\t\tactions.getCounters();\n\t\t\t\t\tsetStore({ filter });\n\t\t\t\t}\n\t\t\t},\n\t\t\tcleanFilter: (type, queryType) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter[type] = false;\n\t\t\t\tfilter[queryType] = '';\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanSearch: () => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst actions = getActions();\n\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter.less = false;\n\t\t\t\tfilter.lessQuery = '';\n\t\t\t\tfilter.greater = false;\n\t\t\t\tfilter.greaterQuery = '';\n\n\t\t\t\tactions.getCounters();\n\t\t\t\tsetStore({ query: '', filter });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n","import React, { useState } from 'react';\nimport getState from './flux.js';\n\nexport const { Consumer, Provider } = React.createContext(null);\n\nconst injectContext = (PassedComponent) => {\n\tconst StoreWrapper = (props) => {\n\t\tconst [ state, setState ] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: (updatedStore) =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\treturn (\n\t\t\t<Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;\n","import React from 'react';\nimport './counter.css';\n\nconst Counter = ({ item, actions }) => {\n\tconst { title, count } = item;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{title}</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={() => actions.handleSubstraction(item)}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t\t<td className=\"text-center\">{count}</td>\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={() => actions.handleAddition(item)}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"delete-btn\" onClick={() => actions.handleDelete(item)}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from '../counter/counter';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiArrowUnsorted } from 'react-icons/ti';\nimport './counterHolder.css';\n\nconst CounterTable = ({ items, actions, sort }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th className=\"clickable\" onClick={() => actions.handleSort('title')}>\n\t\t\t\t\t\tTitle\n\t\t\t\t\t\t{sort.column === 'title' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th className=\"clickable text-center\" onClick={() => actions.handleSort('count')}>\n\t\t\t\t\t\t#\n\t\t\t\t\t\t{sort.column === 'count' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th />\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{items.map((item) => {\n\t\t\t\t\treturn <Counter item={item} key={item.name} actions={actions} />;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default CounterTable;\n","import React from 'react';\nimport './totalCount.css';\n\nconst TotalCount = ({ total }) => {\n\treturn (\n\t\t<div>\n\t\t\tTOTAL: <div className=\"total\">{total}</div>\n\t\t</div>\n\t);\n};\n\nexport default TotalCount;\n","import React, { useState } from 'react';\nimport './counterGenerator.css';\n\nconst CounterGenerator = ({ onNewCounter }) => {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ display, setDisplay ] = useState('hidden');\n\n\tconst handleInput = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetTitle(value);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tautocomplete=\"off\"\n\t\t\tclassName=\"counter-generator\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetTitle('');\n\t\t\t\tonNewCounter(title);\n\t\t\t}}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"counter-generator__btn\"\n\t\t\t\tonClick={() => (display === '' ? setDisplay('hidden') : setDisplay(''))}\n\t\t\t>\n\t\t\t\tCreate counter\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\tname=\"title\"\n\t\t\t\tvalue={title}\n\t\t\t\tplaceholder=\"Name your counter\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={display}\n\t\t\t\tonChange={(e) => handleInput(e)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default CounterGenerator;\n","import React from 'react';\nimport './searchbox.css';\nimport { IoIosSearch } from 'react-icons/io';\n\nconst Searchbox = ({ onSearch, value }) => {\n\treturn (\n\t\t<div className=\"searchbox\">\n\t\t\t<input\n\t\t\t\tname=\"query\"\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => onSearch(e.target.value)}\n\t\t\t/>\n\t\t\t<span className=\"searchbox__icon\">\n\t\t\t\t<IoIosSearch />\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Searchbox;\n","import React, { useState } from 'react';\nimport './filters.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { FaSlidersH } from 'react-icons/fa';\n\nconst Filters = ({ actions, value }) => {\n\tconst [ display, setDisplay ] = useState('hide');\n\n\tconst toggleDisplay = () => {\n\t\tif (display === 'hide') {\n\t\t\tsetDisplay('show');\n\t\t} else {\n\t\t\tsetDisplay('hide');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"filters\">\n\t\t\t<div className=\"filters__header\" onClick={toggleDisplay}>\n\t\t\t\t<h6>Filter your results</h6>\n\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t<FaSlidersH />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={display}>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"less\">Less than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"less\"\n\t\t\t\t\t\tvalue={value.lessQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('less', 'lessQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"greater\">Greater than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"greater\"\n\t\t\t\t\t\tvalue={value.greaterQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('greater', 'greaterQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Filters;\n","import React from 'react';\nimport './messages.css';\n\nconst NoCounters = () => {\n\treturn <h1 className=\"error\">Create your first counter!</h1>;\n};\n\nconst NoMatchingItems = ({ onGoBack }) => {\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t<p>Sorry, there are no counters that match the specified conditions :(</p>\n\t\t\t<span className=\"link\" onClick={onGoBack}>\n\t\t\t\tGo back\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nconst SuccessfullyUpdated = ({ item }) => {\n\tconst { name, type } = item;\n\treturn (\n\t\t<div className=\"success\">\n\t\t\t<p>\n\t\t\t\t{name} was successfully {type === 'add' ? 'added to' : 'deleted from'} your list\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport { NoCounters, NoMatchingItems, SuccessfullyUpdated };\n","import React, { useEffect } from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './messages/messages';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tlet { counters, sort, query, filter } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\n\t\t\t\tif (counters.length) {\n\t\t\t\t\ttotal = counters.map((c) => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t{counters.length ? (\n\t\t\t\t\t\t\t\t<CounterHolder items={counters} actions={actions} sort={sort} />\n\t\t\t\t\t\t\t) : query || filter.less || filter.greater ? (\n\t\t\t\t\t\t\t\t<NoMatchingItems onGoBack={() => actions.cleanSearch()} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<NoCounters />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} />\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}