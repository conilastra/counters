{"version":3,"sources":["store/flux.js","store/appContext.js","components/counter/counter.jsx","components/counterHolder/counterHolder.jsx","components/totalCount/totalCount.jsx","components/counterGenerator/counterGenerator.jsx","components/searchbox/searchbox.jsx","components/filters/filters.jsx","components/app.jsx","index.js"],"names":["getState","getStore","getActions","setStore","store","counters","sort","column","order","active","query","filter","less","lessQuery","greater","greaterQuery","actions","getCounters","a","Axios","get","response","data","handleNewCounter","title","trim","obj","post","counter","handleAddition","item","index","indexOf","id","handleSubstraction","handleDelete","c","delete","handleSort","selectedColumn","handleSearch","handleFilter","type","number","parseInt","cleanFilter","queryType","cleanSearch","React","createContext","Consumer","Provider","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","value","Counter","count","className","onClick","e","CounterTable","items","map","key","name","TotalCount","total","CounterGenerator","onNewCounter","setTitle","display","setDisplay","autocomplete","onSubmit","preventDefault","placeholder","onChange","target","handleInput","Searchbox","onSearch","Filters","htmlFor","onFocus","localActions","useEffect","sorted","length","reduce","acc","val","toLowerCase","includes","filteredByLess","i","filteredByGreater","_","orderBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f4c53d7.chunk.js","sourcesContent":["import Axios from 'axios';\n\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [],\n\t\t\tsort: {\n\t\t\t\tcolumn: '',\n\t\t\t\torder: 'desc',\n\t\t\t\tactive: true\n\t\t\t},\n\t\t\tquery: '',\n\t\t\tfilter: {\n\t\t\t\tless: false,\n\t\t\t\tlessQuery: '',\n\t\t\t\tgreater: false,\n\t\t\t\tgreaterQuery: ''\n\t\t\t}\n\t\t},\n\t\tactions: {\n\t\t\tgetCounters: async () => {\n\t\t\t\tconst response = await Axios.get(`${apiEndpoint}s`);\n\t\t\t\tsetStore({ counters: response.data });\n\t\t\t},\n\t\t\thandleNewCounter: async (title) => {\n\t\t\t\tif (title.trim() !== '') {\n\t\t\t\t\tconst store = getStore();\n\n\t\t\t\t\tconst obj = { title };\n\t\t\t\t\tconst { data: counter } = await Axios.post(apiEndpoint, obj);\n\t\t\t\t\tconst counters = [ ...store.counters, counter ];\n\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleAddition: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tsort.column = '';\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/inc`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/dec`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleDelete: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet counters = [ ...store.counters ];\n\t\t\t\tcounters = counters.filter((c) => c !== item);\n\t\t\t\tsetStore({ counters });\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tawait Axios.delete(apiEndpoint, { data: obj });\n\t\t\t},\n\t\t\thandleSort: (selectedColumn) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet sort = { ...store.sort };\n\n\t\t\t\tif (sort.column === selectedColumn) {\n\t\t\t\t\tsort.order = sort.order === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t} else {\n\t\t\t\t\tsort.column = selectedColumn;\n\t\t\t\t\tsort.order = 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t}\n\n\t\t\t\tsetStore({ sort });\n\t\t\t},\n\t\t\thandleSearch: (query) => {\n\t\t\t\tif (query.trim() !== '') {\n\t\t\t\t\tsetStore({ query });\n\t\t\t\t} else {\n\t\t\t\t\tsetStore({ query: '' });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleFilter: (type, number) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst filter = { ...store.filter };\n\t\t\t\tconst query = parseInt(number);\n\n\t\t\t\tif (query) {\n\t\t\t\t\tif (type === 'less') {\n\t\t\t\t\t\tfilter.less = true;\n\t\t\t\t\t\tfilter.lessQuery = query;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilter.greater = true;\n\t\t\t\t\t\tfilter.greaterQuery = query;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanFilter: (type, queryType) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter[type] = false;\n\t\t\t\tfilter[queryType] = '';\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanSearch: () => {\n\t\t\t\tconst actions = getActions();\n\t\t\t\tactions.cleanFilter();\n\t\t\t\tsetStore({ query: '' });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n","import React, { useState } from 'react';\nimport getState from './flux.js';\n\nexport const { Consumer, Provider } = React.createContext(null);\n\nconst injectContext = (PassedComponent) => {\n\tconst StoreWrapper = (props) => {\n\t\tconst [ state, setState ] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: (updatedStore) =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\treturn (\n\t\t\t<Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;\n","import React from 'react';\nimport './counter.css';\n\nconst Counter = ({ item, actions }) => {\n\tconst { title, count } = item;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{title}</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleSubstraction(item)}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t\t<td className=\"text-center\">{count}</td>\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleAddition(item)}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"delete-btn\" onClick={(e) => actions.handleDelete(item)}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from '../counter/counter';\nimport { FaSortDown, FaSortUp } from 'react-icons/fa';\nimport './counterHolder.css';\n\nconst CounterTable = ({ items, actions, sort }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th className=\"clickable\" onClick={() => actions.handleSort('title')}>\n\t\t\t\t\t\tTitle {sort.column === 'title' ? sort.order === 'asc' ? <FaSortDown /> : <FaSortUp /> : ''}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th className=\"clickable text-center\" onClick={() => actions.handleSort('count')}>\n\t\t\t\t\t\t# {sort.column === 'count' ? sort.order === 'asc' ? <FaSortDown /> : <FaSortUp /> : ''}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th />\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{items.map((item) => {\n\t\t\t\t\treturn <Counter item={item} key={item.name} actions={actions} />;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default CounterTable;\n","import React from 'react';\nimport './totalCount.css';\n\nconst TotalCount = ({ total }) => {\n\treturn (\n\t\t<div>\n\t\t\tTOTAL: <div className=\"total\">{total}</div>\n\t\t</div>\n\t);\n};\n\nexport default TotalCount;\n","import React, { useState } from 'react';\nimport './counterGenerator.css';\n\nconst CounterGenerator = ({ onNewCounter }) => {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ display, setDisplay ] = useState('hidden');\n\n\tconst handleInput = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetTitle(value);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tautocomplete=\"off\"\n\t\t\tclassName=\"counter-generator\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetTitle('');\n\t\t\t\tonNewCounter(title);\n\t\t\t}}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"counter-generator__btn\"\n\t\t\t\tonClick={() => (display === '' ? setDisplay('hidden') : setDisplay(''))}\n\t\t\t>\n\t\t\t\tAdd a counter\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\tname=\"title\"\n\t\t\t\tvalue={title}\n\t\t\t\tplaceholder=\"Give it a name and press enter\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={display}\n\t\t\t\tonChange={(e) => handleInput(e)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default CounterGenerator;\n","import React from 'react';\nimport './searchbox.css';\nimport { IoIosSearch } from 'react-icons/io';\n\nconst Searchbox = ({ onSearch, value }) => {\n\treturn (\n\t\t<div className=\"searchbox\">\n\t\t\t<input\n\t\t\t\tname=\"query\"\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => onSearch(e.target.value)}\n\t\t\t/>\n\t\t\t<span className=\"searchbox__icon\">\n\t\t\t\t<IoIosSearch />\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Searchbox;\n","import React, { useState } from 'react';\nimport './filters.css';\nimport { FaSortDown } from 'react-icons/fa';\n\nconst Filters = ({ actions, value }) => {\n\tconst [ display, setDisplay ] = useState('hide');\n\n\tconst toggleDisplay = () => {\n\t\tif (display === 'hide') {\n\t\t\tsetDisplay('show');\n\t\t} else {\n\t\t\tsetDisplay('hide');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"filters\">\n\t\t\t<h6 onClick={toggleDisplay}>\n\t\t\t\tFilter your results <span className=\"icon\">{display !== 'show' ? <FaSortDown /> : 'x'}</span>\n\t\t\t</h6>\n\t\t\t<div className={display}>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"less\">Less than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"less\"\n\t\t\t\t\t\tvalue={value.lessQuery}\n\t\t\t\t\t\tonFocus={() => actions.cleanFilter('less', 'lessQuery')}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter(e.target.name, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"greater\">Greater than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"greater\"\n\t\t\t\t\t\tvalue={value.greaterQuery}\n\t\t\t\t\t\tonFocus={() => actions.cleanFilter('greater', 'greaterQuery')}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter(e.target.name, e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Filters;\n","import React, {useEffect} from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t}, []);\n\n\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tconst { counters, sort, query, filter } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\t\t\t\tlet sorted = '';\n\t\t\t\t\n\t\t\t\tif (counters.length){\n\t\t\t\t\ttotal = counters.map(c => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t\tconst items = query !== '' ? counters.filter(c => c.title.toLowerCase().includes(query.toLowerCase())) : counters;\n\t\t\t\t\tconst filteredByLess = filter.less ? (filter.greater ? items.filter(i => (i.count < filter.lessQuery && i.count > filter.greaterQuery)) : items.filter(i => i.count < filter.lessQuery)) : items;\n\t\t\t\t\tconst filteredByGreater = filter.greater ? filteredByLess.filter(i => i.count > filter.greaterQuery) : filteredByLess;\n\t\t\t\t\tsorted = sort.active ? _.orderBy(filteredByGreater, [sort.column], [sort.order]) : filteredByGreater;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t</header>\n\n\t\t\t\t\t{counters.length ? \n\t\t\t\t\t<>\n\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t<main>\n\t\t\t\t\t\t{sorted.length ? \n\t\t\t\t\t\t<CounterHolder items={sorted} actions={actions} sort={sort} /> :\n\t\t\t\t\t\t<div className=\"error\">None of the counters match the specified conditions :( <span className=\"link\" onClick={() => actions.cleanSearch()}>Go back</span> </div>}\n\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} /> \n\t\t\t\t\t</main>\n\t\t\t\t\t</>\n\t\t\t\t\t: \n\t\t\t\t\t<main id=\"full-screen\">\n\t\t\t\t\t\t<h1 className=\"text-center\">You don't have any counters yet</h1>\n\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} /> \n\t\t\t\t\t</main>\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t</>)\n\t\t\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}