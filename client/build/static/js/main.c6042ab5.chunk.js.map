{"version":3,"sources":["store/flux.js","store/appContext.js","components/counter/counter.jsx","components/counterHolder/counterHolder.jsx","components/totalCount/totalCount.jsx","components/counterGenerator/counterGenerator.jsx","components/searchbox/searchbox.jsx","components/filters/filters.jsx","components/errorMessages/errorMessages.jsx","components/app.jsx","index.js"],"names":["getState","getStore","setStore","getActions","store","counters","allCounters","sort","column","order","active","query","filter","less","lessQuery","greater","greaterQuery","actions","getCounters","a","Axios","get","response","data","handleNewCounter","title","trim","obj","post","counter","handleAddition","item","index","indexOf","id","handleSubstraction","handleDelete","c","delete","handleSort","selectedColumn","sortedCounters","_","orderBy","handleSearch","toLowerCase","includes","handleFilter","type","queryType","number","parseInt","Number","isNaN","i","count","cleanFilter","cleanSearch","React","createContext","Consumer","Provider","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","value","Counter","className","onClick","e","CounterTable","items","map","key","name","TotalCount","total","CounterGenerator","onNewCounter","setTitle","display","setDisplay","autocomplete","onSubmit","preventDefault","placeholder","onChange","target","handleInput","Searchbox","onSearch","Filters","htmlFor","NoCounters","NoMatchingItems","onGoBack","localActions","useEffect","length","reduce","acc","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6042ab5.chunk.js","sourcesContent":["import Axios from 'axios';\nimport _ from 'lodash';\n\nconst apiEndpoint = '/api/v1/counter';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n\t\t\tcounters: [],\n\t\t\tallCounters: [],\n\t\t\tsort: {\n\t\t\t\tcolumn: '',\n\t\t\t\torder: 'desc',\n\t\t\t\tactive: true\n\t\t\t},\n\t\t\tquery: '',\n\t\t\tfilter: {\n\t\t\t\tless: false,\n\t\t\t\tlessQuery: '',\n\t\t\t\tgreater: false,\n\t\t\t\tgreaterQuery: ''\n\t\t\t}\n\t\t},\n\t\tactions: {\n\t\t\tgetCounters: async () => {\n\t\t\t\tconst response = await Axios.get(`${apiEndpoint}s`);\n\t\t\t\tconst counters = response.data;\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleNewCounter: async (title) => {\n\t\t\t\tif (title.trim() !== '') {\n\t\t\t\t\tconst store = getStore();\n\n\t\t\t\t\tconst obj = { title };\n\t\t\t\t\tconst { data: counter } = await Axios.post(apiEndpoint, obj);\n\t\t\t\t\tconst counters = [ ...store.counters, counter ];\n\n\t\t\t\t\tsetStore({ counters });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleAddition: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/inc`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleSubstraction: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tconst sort = store.sort;\n\t\t\t\tsort.active = false;\n\t\t\t\tawait setStore({ sort });\n\n\t\t\t\tconst counters = [ ...store.counters ];\n\t\t\t\tconst index = counters.indexOf(item);\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tconst { data: counter } = await Axios.post(`${apiEndpoint}/dec`, obj);\n\t\t\t\tcounters[index] = { ...counter };\n\n\t\t\t\tsetStore({ counters });\n\t\t\t},\n\t\t\thandleDelete: async (item) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet counters = [ ...store.counters ];\n\t\t\t\tcounters = counters.filter((c) => c !== item);\n\t\t\t\tsetStore({ counters });\n\n\t\t\t\tconst obj = { id: item.id };\n\t\t\t\tawait Axios.delete(apiEndpoint, { data: obj });\n\t\t\t},\n\t\t\thandleSort: (selectedColumn) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet sort = { ...store.sort };\n\t\t\t\tlet sortedCounters = [ ...store.counters ];\n\n\t\t\t\tif (sort.column === selectedColumn) {\n\t\t\t\t\tsort.order = sort.order === 'asc' ? 'desc' : 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t} else {\n\t\t\t\t\tsort.column = selectedColumn;\n\t\t\t\t\tsort.order = 'asc';\n\t\t\t\t\tsort.active = true;\n\t\t\t\t}\n\n\t\t\t\tsortedCounters = sort.active\n\t\t\t\t\t? _.orderBy(sortedCounters, [ sort.column ], [ sort.order ])\n\t\t\t\t\t: sortedCounters;\n\n\t\t\t\tsetStore({ sort, counters: sortedCounters });\n\t\t\t},\n\t\t\thandleSearch: (query) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tif (query.trim() !== '') {\n\t\t\t\t\tlet counters = store.counters.filter((c) => c.title.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\tsetStore({ query, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tsetStore({ query: '', counters: store.allCounters });\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleFilter: (type, queryType, number) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet allCounters = [ ...store.counters ];\n\n\t\t\t\tconst filter = { ...store.filter };\n\t\t\t\tlet query = parseInt(number);\n\t\t\t\tquery = Number.isNaN(query) ? '' : query;\n\n\t\t\t\tif (query !== '') {\n\t\t\t\t\tfilter[type] = true;\n\t\t\t\t\tfilter[queryType] = query;\n\t\t\t\t\tlet counters = [ ...store.counters ];\n\n\t\t\t\t\tif (type === 'less') {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count < filter.lessQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters = counters.filter((i) => i.count > filter.greaterQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStore({ filter, counters, allCounters });\n\t\t\t\t} else {\n\t\t\t\t\tfilter[type] = false;\n\t\t\t\t\tfilter[queryType] = '';\n\n\t\t\t\t\tsetStore({ filter, counters: store.allCounters });\n\t\t\t\t}\n\t\t\t},\n\t\t\tcleanFilter: (type, queryType) => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\t\t\t\tfilter[type] = false;\n\t\t\t\tfilter[queryType] = '';\n\t\t\t\tsetStore({ filter });\n\t\t\t},\n\t\t\tcleanSearch: () => {\n\t\t\t\tconst store = getStore();\n\t\t\t\tlet filter = { ...store.filter };\n\n\t\t\t\tif (filter.less) {\n\t\t\t\t\tfilter.less = false;\n\t\t\t\t\tfilter.lessQuery = '';\n\t\t\t\t} else if (filter.greater) {\n\t\t\t\t\tfilter.greater = false;\n\t\t\t\t\tfilter.greaterQuery = '';\n\t\t\t\t}\n\n\t\t\t\tsetStore({ query: '', filter, counters: store.allCounters });\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport default getState;\n","import React, { useState } from 'react';\nimport getState from './flux.js';\n\nexport const { Consumer, Provider } = React.createContext(null);\n\nconst injectContext = (PassedComponent) => {\n\tconst StoreWrapper = (props) => {\n\t\tconst [ state, setState ] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: (updatedStore) =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\treturn (\n\t\t\t<Provider value={state}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext;\n","import React from 'react';\nimport './counter.css';\n\nconst Counter = ({ item, actions }) => {\n\tconst { title, count } = item;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{title}</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleSubstraction(item)}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t\t<td className=\"text-center\">{count}</td>\n\t\t\t<td>\n\t\t\t\t<button className=\"counter-btn\" onClick={(e) => actions.handleAddition(item)}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</td>\n\n\t\t\t<td>\n\t\t\t\t<button className=\"delete-btn\" onClick={(e) => actions.handleDelete(item)}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from '../counter/counter';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiArrowUnsorted } from 'react-icons/ti';\nimport './counterHolder.css';\n\nconst CounterTable = ({ items, actions, sort }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th className=\"clickable\" onClick={() => actions.handleSort('title')}>\n\t\t\t\t\t\tTitle\n\t\t\t\t\t\t{sort.column === 'title' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th className=\"clickable text-center\" onClick={() => actions.handleSort('count')}>\n\t\t\t\t\t\t#\n\t\t\t\t\t\t{sort.column === 'count' && sort.active ? sort.order === 'asc' ? (\n\t\t\t\t\t\t\t<TiArrowSortedDown />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowSortedUp />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TiArrowUnsorted />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</th>\n\t\t\t\t\t<th />\n\t\t\t\t\t<th />\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{items.map((item) => {\n\t\t\t\t\treturn <Counter item={item} key={item.name} actions={actions} />;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default CounterTable;\n","import React from 'react';\nimport './totalCount.css';\n\nconst TotalCount = ({ total }) => {\n\treturn (\n\t\t<div>\n\t\t\tTOTAL: <div className=\"total\">{total}</div>\n\t\t</div>\n\t);\n};\n\nexport default TotalCount;\n","import React, { useState } from 'react';\nimport './counterGenerator.css';\n\nconst CounterGenerator = ({ onNewCounter }) => {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ display, setDisplay ] = useState('hidden');\n\n\tconst handleInput = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetTitle(value);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tautocomplete=\"off\"\n\t\t\tclassName=\"counter-generator\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetTitle('');\n\t\t\t\tonNewCounter(title);\n\t\t\t}}\n\t\t>\n\t\t\t<button\n\t\t\t\tclassName=\"counter-generator__btn\"\n\t\t\t\tonClick={() => (display === '' ? setDisplay('hidden') : setDisplay(''))}\n\t\t\t>\n\t\t\t\tAdd a counter\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\tname=\"title\"\n\t\t\t\tvalue={title}\n\t\t\t\tplaceholder=\"Give it a name and press enter\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={display}\n\t\t\t\tonChange={(e) => handleInput(e)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default CounterGenerator;\n","import React from 'react';\nimport './searchbox.css';\nimport { IoIosSearch } from 'react-icons/io';\n\nconst Searchbox = ({ onSearch, value }) => {\n\treturn (\n\t\t<div className=\"searchbox\">\n\t\t\t<input\n\t\t\t\tname=\"query\"\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => onSearch(e.target.value)}\n\t\t\t/>\n\t\t\t<span className=\"searchbox__icon\">\n\t\t\t\t<IoIosSearch />\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Searchbox;\n","import React, { useState } from 'react';\nimport './filters.css';\nimport { IoMdClose } from 'react-icons/io';\nimport { FaSlidersH } from 'react-icons/fa';\n\nconst Filters = ({ actions, value }) => {\n\tconst [ display, setDisplay ] = useState('hide');\n\n\tconst toggleDisplay = () => {\n\t\tif (display === 'hide') {\n\t\t\tsetDisplay('show');\n\t\t} else {\n\t\t\tsetDisplay('hide');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"filters\">\n\t\t\t<div className=\"filters__header\" onClick={toggleDisplay}>\n\t\t\t\t<h6>Filter your results</h6>\n\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t<FaSlidersH />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={display}>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"less\">Less than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"less\"\n\t\t\t\t\t\tvalue={value.lessQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('less', 'lessQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"row\">\n\t\t\t\t\t<label htmlFor=\"greater\">Greater than: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"sm-input\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"greater\"\n\t\t\t\t\t\tvalue={value.greaterQuery}\n\t\t\t\t\t\tonChange={(e) => actions.handleFilter('greater', 'greaterQuery', e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Filters;\n","import React from 'react';\n\nconst NoCounters = () => {\n\treturn <h1 className=\"text-center\">You don't have any counters yet</h1>;\n};\n\nconst NoMatchingItems = ({ onGoBack }) => {\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t<p>None of the counters match the specified conditions :(</p>\n\t\t\t<span className=\"link\" onClick={onGoBack}>\n\t\t\t\tGo back\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport { NoCounters, NoMatchingItems };\n","import React, {useEffect} from 'react';\nimport './app.css';\nimport injectContext, { Consumer } from '../store/appContext';\nimport CounterHolder from './counterHolder/counterHolder';\nimport TotalCount from './totalCount/totalCount';\nimport CounterGenerator from './counterGenerator/counterGenerator';\nimport _ from 'lodash';\nimport Searchbox from './searchbox/searchbox';\nimport Filters from './filters/filters';\nimport { NoCounters, NoMatchingItems } from './errorMessages/errorMessages';\n\nconst App = () => {\n\tlet localActions = null;\n\n\tuseEffect(() => {\n\t\tif (localActions !== null) {\n\t\t\tlocalActions.getCounters();\n\t\t}\n\t}, []);\n\n\n\n\treturn (\n\t\t<Consumer>\n\t\t\t{({ store, actions }) => {\n\t\t\t\tlet { counters, sort, query, filter, allCounters } = store;\n\t\t\t\tlocalActions = actions;\n\t\t\t\tlet total = '';\n\t\t\t\t\n\t\t\t\tif (counters.length){\n\t\t\t\t\ttotal = counters.map(c => c.count).reduce((acc, val) => acc + val);\n\t\t\t\t\tallCounters = allCounters.length ? allCounters : counters;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t<Searchbox onSearch={actions.handleSearch} value={store.query} />\n\t\t\t\t\t\t\t<TotalCount total={total ? total : 0} />\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t{allCounters.length ? \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<Filters actions={actions} value={store.filter} />\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t{counters.length && (!query || !filter.greater || !filter.less) ? \n\t\t\t\t\t\t\t<CounterHolder items={counters} actions={actions} sort={sort} /> :\n\t\t\t\t\t\t\t<NoMatchingItems onGoBack={() => actions.cleanSearch()} />}\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} /> \n\t\t\t\t\t\t</main>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<main id=\"full-screen\">\n\t\t\t\t\t\t\t<NoCounters/>\n\t\t\t\t\t\t\t<CounterGenerator onNewCounter={actions.handleNewCounter} /> \n\t\t\t\t\t\t</main>\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t</>)\n\t\t\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default injectContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}